using DevExpress.Web.ASPxGridView;
using GPPromotion.Constants;
using log4net;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace GPPromotion.LiXi
{
    public partial class BaoCaoCapLiXi : System.Web.UI.Page
    {
        DateTime dtStartLiXi = DateTime.Parse(System.Configuration.ConfigurationManager.AppSettings["StartLiXi"]);
        DateTime dtEndLiXi = DateTime.Parse(System.Configuration.ConfigurationManager.AppSettings["EndLiXi"]);
        ILog log = LogManager.GetLogger(typeof(BaoCaoCapLiXi));

        #region Events
        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                txtFrom.Text = dtStartLiXi.ToString("dd/MM/yyyy");
                txtTo.Text = DateTime.Now.ToString("dd/MM/yyyy");
                if (Session[Constant.USERNAME] != null)
                {
                    BindBranch();
                }
            }

            BindData();
        }

        protected void dxgvLiXi_HtmlRowCreated(object sender, DevExpress.Web.ASPxGridView.ASPxGridViewTableRowEventArgs e)
        {
            if (e.RowType == DevExpress.Web.ASPxGridView.GridViewRowType.Data)
            {
                Label lbl = dxgvLiXi.FindRowCellTemplateControl(e.VisibleIndex, null, "lblBranchName") as Label;
                string strCoCode = e.GetValue("CoCode").ToString();
                if (lbl != null && strCoCode != string.Empty)
                {
                    using (EBanking.T24_COMPANY_BO objT24_COMPANY_BO = new EBanking.T24_COMPANY_BO())
                    {
                        EBanking.T24_COMPANY objT24_COMPANY = objT24_COMPANY_BO.GetByCOMPANY_CODE(strCoCode);
                        if (objT24_COMPANY != null)
                        {
                            lbl.Text = objT24_COMPANY.COMPANY_NAME;
                        }
                    }
                }

                Label lbl2 = dxgvLiXi.FindRowCellTemplateControl(e.VisibleIndex, null, "lblStatus") as Label;
                if (lbl2 != null)
                {
                    if (e.GetValue("IsUsed") != null)
                    {
                        bool strStatus = Convert.ToBoolean(e.GetValue("IsUsed"));

                        if (strStatus)
                        {
                            lbl2.Text = "Đã cấp";
                        }
                        else
                        {
                            lbl2.Text = "Đã xóa";
                        }
                    }
                    else
                    {
                        lbl2.Text = "Đã cấp";
                    }
                }
            }
        }

        protected void dxgvLiXi_CustomColumnDisplayText(object sender, DevExpress.Web.ASPxGridView.ASPxGridViewColumnDisplayTextEventArgs e)
        {
            if (e.Column.Caption == "STT")
            {
                e.DisplayText = (e.VisibleRowIndex + 1).ToString();
            }
        }

        protected void grvExport_RenderBrick(object sender, DevExpress.Web.ASPxGridView.Export.ASPxGridViewExportRenderingEventArgs e)
        {
            GridViewDataColumn dataColumn = e.Column as GridViewDataColumn;
            if (e.RowType == GridViewRowType.Data && dataColumn != null && dataColumn.VisibleIndex == 8)
            {
                string strCoCode = e.GetValue("CoCode").ToString();
                if (strCoCode != string.Empty)
                {
                    using (EBanking.T24_COMPANY_BO objT24_COMPANY_BO = new EBanking.T24_COMPANY_BO())
                    {
                        EBanking.T24_COMPANY objT24_COMPANY = objT24_COMPANY_BO.GetByCOMPANY_CODE(strCoCode);
                        if (objT24_COMPANY != null)
                        {
                            e.TextValue = objT24_COMPANY.COMPANY_NAME;
                        }
                    }
                }
            }

            dataColumn = e.Column as GridViewDataColumn;
            if (e.RowType == GridViewRowType.Data && dataColumn != null && dataColumn.VisibleIndex == 9)
            {
                if (e.GetValue("IsUsed") != null)
                {
                    bool strStatus = Convert.ToBoolean(e.GetValue("IsUsed"));

                    if (strStatus)
                    {
                        e.TextValue = "Đã cấp";
                    }
                    else
                    {
                        e.TextValue = "Đã xóa";
                    }
                }
                else
                {
                    e.TextValue = "Đã cấp";
                }
            }
        }

        protected void cmdSearch_Click(object sender, EventArgs e)
        {

        }

        protected void cboBranch_SelectedIndexChanged(object sender, EventArgs e)
        {

        }

        protected void cmdExport_Click(object sender, EventArgs e)
        {
            grvExport.WriteXlsToResponse("DanhSachCapLiXi");
        }

        #endregion

        #region Methods
        private void BindData()
        {
            try
            {
                if (string.IsNullOrEmpty(txtFrom.Text))
                {
                    lblMessage.Text = "Nhập ngày bắt đầu báo cáo";
                    txtFrom.Focus();
                    return;
                }

                if (string.IsNullOrEmpty(txtTo.Text))
                {
                    lblMessage.Text = "Nhập ngày kết thúc báo cáo";
                    txtTo.Focus();
                    return;
                }


                DateTime dtFrom = new DateTime();
                DateTime dtTo = new DateTime();
                string[] arr = null;
                int day = -1;
                int month = -1;
                int year = -1;
                if (!string.IsNullOrEmpty(txtFrom.Text))
                {
                    arr = txtFrom.Text.Trim().Split('/');
                    if (arr != null && arr.Length > 2)
                    {
                        int.TryParse(arr[0], out day);
                        int.TryParse(arr[1], out month);
                        int.TryParse(arr[2], out year);
                        if (day > 0 && month > 0 && year > 0)
                        {
                            dtFrom = new DateTime(year, month, day, 0, 0, 1);
                        }
                    }
                }

                if (!string.IsNullOrEmpty(txtTo.Text))
                {
                    arr = txtTo.Text.Trim().Split('/');
                    if (arr != null && arr.Length > 2)
                    {
                        int.TryParse(arr[0], out day);
                        int.TryParse(arr[1], out month);
                        int.TryParse(arr[2], out year);
                        if (day > 0 && month > 0 && year > 0)
                        {
                            dtTo = new DateTime(year, month, day, 23, 59, 59);
                        }
                    }
                }

                using (KhuyenMaiDataModel.LiXi_BO objLiXi_BO = new KhuyenMaiDataModel.LiXi_BO())
                {
                    List<KhuyenMaiDataModel.LiXi> lstData = objLiXi_BO.GetByCoCode(cboBranch.SelectedItem.Value, dtFrom, dtTo).ToList();
                    dxgvLiXi.DataSource = lstData;
                    dxgvLiXi.DataBind();
                }
            }
            catch (Exception ex)
            {
                log.Fatal(ex);
            }
        }

        private void BindBranch()
        {
            using (EBanking.T24_COMPANY_BO objT24_COMPANY_BO = new EBanking.T24_COMPANY_BO())
            {
                List<EBanking.T24_COMPANY> lstData = objT24_COMPANY_BO.GetAll().ToList();
                foreach (EBanking.T24_COMPANY item in lstData)
                {
                    cboBranch.Items.Add(new ListItem(item.COMPANY_CODE + "-" + item.COMPANY_NAME, item.COMPANY_CODE));
                }
                cboBranch.Items.Insert(0, new ListItem("--Chọn chi nhánh--", string.Empty));
                if (Session[Constants.Constant.DAO_CODE] != null)
                {
                    cboBranch.ClearSelection();
                    using (EBanking.DAO_COMPANY_BO objDAO_COMPANY_BO = new EBanking.DAO_COMPANY_BO())
                    {
                        List<EBanking.DAO_COMPANY> lstDaoCompany = objDAO_COMPANY_BO.GetByDAO_CODE(Session[Constants.Constant.DAO_CODE].ToString()).ToList();
                        if (lstDaoCompany != null)
                        {
                            foreach (EBanking.DAO_COMPANY item in lstDaoCompany)
                            {
                                if (item.DAO_CODE == Session[Constants.Constant.DAO_CODE].ToString() && !string.IsNullOrEmpty(item.COMPANY_CODE.Trim()))
                                {
                                    if (cboBranch.Items.FindByValue(item.COMPANY_CODE) != null)
                                    {
                                        cboBranch.Items.FindByValue(item.COMPANY_CODE).Selected = true;
                                    }
                                    break;
                                }
                            }
                        }
                    }
                }
            }
        }

        #endregion
    }
}